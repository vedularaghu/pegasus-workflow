# Filename: workflow3-0.dag.condor.sub
# Generated by condor_submit_dag workflow3-0.dag 
universe	= scheduler
executable	= /bin/condor_dagman
getenv		= True
output		= workflow3-0.dag.lib.out
error		= workflow3-0.dag.lib.err
log		= workflow3-0.dag.dagman.log
remove_kill_sig	= SIGUSR1
+OtherJobRemoveRequirements	= "DAGManJobId =?= $(cluster)"
# Note: default on_exit_remove expression:
# ( ExitSignal =?= 11 || (ExitCode =!= UNDEFINED && ExitCode >=0 && ExitCode <= 2))
# attempts to ensure that DAGMan is automatically
# requeued by the schedd if it exits abnormally or
# is killed (e.g., during a reboot).
on_exit_remove	= (ExitSignal =?= 11 || (ExitCode =!= UNDEFINED && ExitCode >=0 && ExitCode <= 2))
copy_to_spool	= False
arguments	= "-p 0 -f -l . -Lockfile workflow3-0.dag.lock -AutoRescue 1 -DoRescueFrom 0 -Dag workflow3-0.dag -MaxPost 20 -Suppress_notification -CsdVersion $CondorVersion:' '8.8.9' 'May' '06' '2020' 'BuildID:' '503068' 'PackageID:' '8.8.9-1' '$ -Dagman /bin/condor_dagman"
environment	= _CONDOR_SCHEDD_ADDRESS_FILE=/var/lib/condor/spool/.schedd_address;_CONDOR_MAX_DAGMAN_LOG=0;_CONDOR_SCHEDD_DAEMON_AD_FILE=/var/lib/condor/spool/.schedd_classad;_CONDOR_DAGMAN_LOG=workflow3-0.dag.dagman.out
executable=/home/scitech/pegasus/dist/pegasus-5.0.0dev/bin/pegasus-dagman
+pegasus_wf_uuid="8da9dd6b-1c65-4d0e-b194-ff5db126957e"
+pegasus_root_wf_uuid="8da9dd6b-1c65-4d0e-b194-ff5db126957e"
+pegasus_wf_name="workflow3-0"
+pegasus_wf_time="20200708T234319+0000"
+pegasus_version="5.0.0dev"
+pegasus_job_class=11
+pegasus_cluster_size=1
+pegasus_site="local"
+pegasus_execution_sites="condorpool"
+pegasus_wf_xformation="pegasus::dagman"
environment	= _CONDOR_SCHEDD_ADDRESS_FILE=/var/lib/condor/spool/.schedd_address;_CONDOR_MAX_DAGMAN_LOG=0;_CONDOR_SCHEDD_DAEMON_AD_FILE=/var/lib/condor/spool/.schedd_classad;_CONDOR_DAGMAN_LOG=workflow3-0.dag.dagman.out;PEGASUS_METRICS=true;
queue